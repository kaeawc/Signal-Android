name: Android CI

on:
  push:
    branches:
      - '**'

permissions:
  contents: read # to fetch code (actions/checkout)
  checks: write
  security-events: write
  pull-requests: write

jobs:
  unit-tests:
    name: "Unit Tests"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: ":Signal-Android:testPlayProdReleaseUnitTest"
          reuse-configuration-cache: false

  spotless:
    name: "ktlint Check"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: "Signal-Android:ktlintCheck :libsignal-service:ktlintCheck :core-util-jvm:ktlintCheck"
          reuse-configuration-cache: false

  android-lint:
    name: "Android Lint"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: ":Signal-Android:lintPlayProdRelease"
          reuse-configuration-cache: false

      - name: "Merge Lint SARIF results & Move HTML report"
        shell: "bash"
        run: |
          mkdir -p build/reports
          find . | grep "lint-results.sarif" | xargs jq -s '{ "$schema": "https://json.schemastore.org/sarif-2.1.0", "version": "2.1.0", "runs": map(.runs) | add }'  > build/reports/merged-lint.sarif
          mv app/build/reports/lint-results-release.html build/reports/lint-results.html

      - name: "Store Android Lint SARIF Report"
        uses: github/codeql-action/upload-sarif@v3
        if: success()
        with:
          sarif_file: build/reports/merged-lint.sarif

      - name: "Store Android Lint HTML Report"
        uses: actions/upload-artifact@v4.4.0
        if: success()
        with:
          name: android-lint-report
          path: |
            build/reports/lint-results.html

  libsignal-service:
    name: "Build and Check libsignal"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: ":libsignal-service:test :libsignal-service:ktlintCheck"
          reuse-configuration-cache: false

  core-util-jvm:
    name: "Build and Check Core Utils"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: ":core-util-jvm:test :core-util-jvm:ktlintCheck"
          reuse-configuration-cache: false

  build-apk:
    name: "Build APK"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: ":Signal-Android:assemblePlayProdRelease"
          reuse-configuration-cache: true
          gradle-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: "Look for Expected Artifact"
        shell: "bash"
        run: |
          find app/build/outputs/apk | grep ".apk"

      - name: "Store APK"
        uses: actions/upload-artifact@v4.4.0
        with:
          name: apk
          path: app/build/outputs/apk/release/play/prod/app-play-prod-release.apk

  build-base-apk:
    name: "Build Base APK"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4
        with:
          submodules: true
          ref: ${{ github.event.pull_request.base.sha }}

      - name: "Build APK from PR base SHA"
        uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: ":Signal-Android:assemblePlayProdRelease"
          reuse-configuration-cache: true
          gradle-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
          optional-suffix: "-base"

      - name: "Look for Expected Artifact"
        shell: "bash"
        run: |
          find app/build/outputs/apk | grep ".apk"

      - name: "Change APK file name"
        shell: "bash"
        run: |
          mv app/build/outputs/apk/release/play/prod/app-play-prod.apk app/build/outputs/apk/release/play/prod/app-base-play-prod-release.apk

      - name: "Store Base APK"
        uses: actions/upload-artifact@v4.4.0
        with:
          name: base-apk
          path: app/build/outputs/apk/release/play/prod/app-base-play-prod-release.apk

  build-test-apk:
    name: "Build Test APK"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@v4

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: "assemblePlayProdAndroidTest"
          reuse-configuration-cache: false
          optional-suffix: "-test"

      - name: "Look for Expected Artifact"
        shell: "bash"
        run: |
          find app/build/outputs/apk | grep ".apk"

      - name: "Store Test APK"
        uses: actions/upload-artifact@v4.4.0
        with:
          name: test-apk
          path: app/build/outputs/apk/androidTest/release/play/prod/app-release-play-prod-androidTest.apk

  diff-apk-from-base:
    name: "Diff APK from Base"
    runs-on: ubuntu-latest
    if: github.secret_source == 'Actions'
    needs:
      - build-apk
      - build-base-apk
    steps:
      - uses: actions/download-artifact@v4.1.8
        with:
          name: apk

      - uses: actions/download-artifact@v4.1.8
        with:
          name: base-apk

      - id: diffuse
        uses: usefulness/diffuse-action@v1
        with:
          old-file-path: app-base-play-prod-release.apk
          new-file-path: app-play-prod-release.apk

      - uses: peter-evans/find-comment@v3
        id: find-comment
        if: ${{ github.event.pull_request }}
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: Diffuse output

      - uses: peter-evans/create-or-update-comment@v4
        if: ${{ github.event.pull_request }}
        with:
          body: |
            Diffuse output:
            
            ${{ steps.diffuse.outputs.diff-gh-comment }}
          edit-mode: replace
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v4.4.0
        with:
          name: diffuse-output
          path: ${{ steps.diffuse.outputs.diff-file }}
